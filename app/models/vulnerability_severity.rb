class VulnerabilitySeverity < ActiveRecord::Base
  belongs_to :severity
  belongs_to :classification
  belongs_to :location
  has_many :vulnerabilities, :finder_sql => 'SELECT vulnerabilities.* FROM vulnerabilities ' +
                                            'LEFT JOIN plugins ON vulnerabilities.plugin_id = plugins.id ' +
                                            'LEFT JOIN hosts ON vulnerabilities.host_id = hosts.id ' +
                                            'WHERE hosts.location_id = #{location_id} AND ' +
                                            '      plugins.classification_id = #{classification_id}'
  
  def self.severify(classification, location)
    location_id       = nil
    
    case location
    when Fixnum
      location_id = location
    when Location
      location_id = location.id
    else
      fail "location must be an id or Family"
    end
    
    severity = nil

    if Fixnum === classification
      VulnerabilitySeverity.find(:first, :conditions => { :classification_id => classification, :location_id => location_id }).severity rescue nil
    elsif Classification === classification
      classification.vulnerability_severities.each do |vulnerability_severity|
        severity = vulnerability_severity.severity if vulnerability_severity.location_id = location_id
      end
    else
      fail "classification must be an id or Family"
    end
    
    severity
  end
end
